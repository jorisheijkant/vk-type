// _decimal.scss | MIT License | gist.github.com/terkel/4373420

// Round a number to specified digits.
//
// @param  {Number} $number A number to round
// @param  {Number} [$digits:0] Digits to output
// @param  {String} [$mode:round] (round|ceil|floor) How to round a number
// @return {Number} A rounded number
// @example
//     decimal-round(0.333)    => 0
//     decimal-round(0.333, 1) => 0.3
//     decimal-round(0.333, 2) => 0.33
//     decimal-round(0.666)    => 1
//     decimal-round(0.666, 1) => 0.7
//     decimal-round(0.666, 2) => 0.67
//
@function decimal-round ($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{$number} is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{$digits} is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{$digits} has a unit.';
    @return $number;
  }
  @for $i from 1 through $digits {
    $n: $n * 10;
  }
  @if $mode == round {
    @return round($number * $n) / $n;
  } @else if $mode == ceil {
    @return ceil($number * $n) / $n;
  } @else if $mode == floor {
    @return floor($number * $n) / $n;
  } @else {
    @warn '#{$mode} is undefined keyword.';
    @return $number;
  }
}

// Ceil a number to specified digits.
//
// @param  {Number} $number A number to round
// @param  {Number} [$digits:0] Digits to output
// @return {Number} A ceiled number
// @example
//     decimal-ceil(0.333)    => 1
//     decimal-ceil(0.333, 1) => 0.4
//     decimal-ceil(0.333, 2) => 0.34
//     decimal-ceil(0.666)    => 1
//     decimal-ceil(0.666, 1) => 0.7
//     decimal-ceil(0.666, 2) => 0.67
//
@function decimal-ceil ($number, $digits: 0) {
  @return decimal-round($number, $digits, ceil);
}

// Floor a number to specified digits.
//
// @param  {Number} $number A number to round
// @param  {Number} [$digits:0] Digits to output
// @return {Number} A floored number
// @example
//     decimal-floor(0.333)    => 0
//     decimal-floor(0.333, 1) => 0.3
//     decimal-floor(0.333, 2) => 0.33
//     decimal-floor(0.666)    => 0
//     decimal-floor(0.666, 1) => 0.6
//     decimal-floor(0.666, 2) => 0.66
//
@function decimal-floor ($number, $digits: 0) {
  @return decimal-round($number, $digits, floor);
}

// calculate font size in ems based on font size in px and base size in px
@function get-rems($font-size,$base-size: $base-size){
  @return decimal-floor(($font-size/$base-size),2)+rem
}

// calculate line-height based on font size and line height in px
@function get-lh($font-size,$line-height){
  @return decimal-floor(($line-height/$font-size),2)+em
}
@function line-height($font-size,$line-height){
  @return decimal-floor(($line-height/$font-size),2)+em
}

// includes font-family and responsive font-size
@mixin typogram($typogram, $fs-breakpoints: $breakpoints) {
  // need to dynamically include font-family based on var
  @if map-has-key($typogram, 'style') {
    font-family: map-get($typogram, 'style');
  }
  @if map-has-key($typogram, 'letter-spacing') {
    letter-spacing: map-get($typogram, 'letter-spacing');
  }
  @if map-has-key($typogram, 'text-transform') {
    text-transform: map-get($typogram, 'text-transform');
  }
  @if map-has-key($typogram, 'sizes') {
    // include responsive font sizes
    @include font-size(map-get($typogram, 'sizes'));
  }
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}

// Many thanks and credits to Thijs Gadiot for his work on compiling typography using sass typograms

/*
// Hoe het werkt
.testcase {
	@include typogram($b4);
}*/


// Set up a global typogram variable
$typogram-names: (h1,h2,h3,h4,body,header,button,quote,caption,lead,credits, note, alt);

// define base sizes, equals 1em.
$base-size: 18;
$base-size-px: 18px;
$default-line-height: 1.2em;

// define breakpoints used for responsive typography
// TAKEN FROM VK BREAKPOINTS FILE
$breakpoints: (
        small : $screen-xs,
        medium: $screen-sm,
        large : $screen-md
);

//
// TYPOGRAMMEN, zelfde als in de VK website
//

// h1			– Capitolium, 30px/42px -> Production title
$h1-font-family: $font-capitolium-head;
$h1-font-sizes: (
        null  : (get-rems(30), 1.1),
        small : (get-rems(30), 1.1),
        medium: (get-rems(42), 1.07),
        large : (get-rems(42), 1.07),
);
$h1: (
        style : $h1-font-family,
        sizes : $h1-font-sizes
);

// h3			– Benton 19px/20px -> Subheadings
$h3-font-family: $font-benton;
$h3-font-sizes: (
        null  : (get-rems(19), 1.21),
        small : (get-rems(19), 1.21),
        medium: (get-rems(20), 1.2),
        large : (get-rems(20), 1.2),
);
$h3: (
        style : $h3-font-family,
        sizes : $h3-font-sizes
);

// h4			– Benton 14px -> Labels
$h4-font-family: $font-benton;
$h4-font-sizes: (
        null  : (get-rems(14), 1.43),
        small : (get-rems(14), 1.43),
        medium: (get-rems(14), 1.43),
        large : (get-rems(14), 1.43),
);
$h4: (
        style : $h4-font-family,
        sizes : $h4-font-sizes
);

// Body		– Capitolium News 19px/20px
$body-font-family: $font-capitolium-news;
$body-font-sizes: (
        null  : (get-rems(19), 1.37),
        small : (get-rems(19), 1.37),
        medium: (get-rems(20), 1.5),
        large : (get-rems(20), 1.5),
);
$body: (
        style : $body-font-family,
        sizes : $body-font-sizes
);

$caption-font-family: $font-benton;
$caption-font-sizes: (
        null  : (get-rems(13), 1.08),
        small : (get-rems(13), 1.08),
        medium: (get-rems(13), 1.08),
        large : (get-rems(13), 1.08),
);
$caption: (
        style : $caption-font-family,
        sizes : $caption-font-sizes
);

$lead-font-family: $font-capitolium-head;
$lead-font-sizes: (
        null  : (get-rems(22), 1.13),
        small : (get-rems(22), 1.13),
        medium: (get-rems(24), 1.14),
        large : (get-rems(24), 1.14),
);
$lead: (
        style : $lead-font-family,
        sizes : $lead-font-sizes
);

$credits-font-family: $font-benton;
$credits-font-sizes: (
        null  : (get-rems(16), 1),
        small : (get-rems(16), 1),
        medium: (get-rems(16), 1),
        large : (get-rems(16), 1),
);
$credits: (
        style : $credits-font-family,
        sizes : $credits-font-sizes
);

$note-font-family: $font-benton;
$note-font-sizes: (
        null  : (get-rems(14), 1.5),
        small : (get-rems(14), 1.5),
        medium: (get-rems(15), 1.53),
        large : (get-rems(15), 1.53),
);
$note: (
        style : $note-font-family,
        sizes : $note-font-sizes
);

//
// TYPOGRAMMEN, specifiek voor Kijk Verder (wel gebaseerd op de UI styleguide van de website)
//

// h2			– 30px, 32px -> Kleinere titelstijl voor visualisaties
$h2-font-family: $font-capitolium-head;
//$h2-leading: line-height(100,108);
$h2-font-sizes: (
        null  : (get-rems(30), 1.1),
        small : (get-rems(30), 1.1),
        medium: (get-rems(32), 1.07),
        large : (get-rems(32), 1.07),
);
$h2: (
        style : $h2-font-family,
        sizes : $h2-font-sizes
);

// Button         - Benton 13px/15px
$button-font-family: $font-benton;
$button-font-sizes: (
        null  : (get-rems(13), 1.2),
        small : (get-rems(13), 1.2),
        medium: (get-rems(15), 1.2),
        large : (get-rems(15), 1.2),
);
$buttontype: (
        style : $button-font-family,
        sizes : $button-font-sizes
);

// Blockquote
$quote-font-family: $font-capitolium-news;
$quote-font-sizes: (
        null  : (get-rems(22), 1.2),
        small : (get-rems(22), 1.2),
        medium: (get-rems(25), 1.21),
        large : (get-rems(25), 1.21),
);
$quote: (
        style : $quote-font-family,
        sizes : $quote-font-sizes
);

// alt  		– Voor labels, en alle tekstjes die anders moeten maar geen note of caption zijn
$alt-font-family: $font-benton;
$alt-font-sizes: (
        null  : (get-rems(16), 1.2),
        small : (get-rems(16), 1.2),
        medium: (get-rems(18), 1.37),
        large : (get-rems(18), 1.37),
);
$alt: (
        style : $alt-font-family,
        sizes : $alt-font-sizes
);

//
// TYPOGRAMMEN, nog vrij
//

// h5			– Kopie van tussenkopje h3
$h5-font-family: $font-benton;
$h5-font-sizes: (
        null  : (get-rems(19), 1.21),
        small : (get-rems(19), 1.21),
        medium: (get-rems(20), 1.2),
        large : (get-rems(20), 1.2),
);
$h5: (
        style : $h5-font-family,
        sizes : $h5-font-sizes
);

// h6			– Kopie van tussenkopje h3
$h6-font-family: $font-benton;
$h6-font-sizes: (
        null  : (get-rems(19), 1.21),
        small : (get-rems(19), 1.21),
        medium: (get-rems(20), 1.2),
        large : (get-rems(20), 1.2),
);
$h6: (
        style : $h6-font-family,
        sizes : $h6-font-sizes
);

//base typography, only html elements, no specific classes

// base size, equals 1em.
$base-size: 18;
$base-size-px: 18px;
$default-line-height: 1.4em;

html, body {
  font-size: $base-size+px;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

input {
  @include typogram($body);
}

p {
  @include typogram($body);
  font-weight: normal;
  letter-spacing: -0.07px;
  margin-bottom: 30px;
}

ul, ol {
  list-style-position: inside;
  margin-bottom: 30px;

  li {
    @include typogram($body);
    font-weight: normal;
    letter-spacing: -0.07px;
  }
}

table {
  @include typogram($note);
}

h1 {
  @include typogram($h1);
  font-weight: bold;
  @include respond-until($screen-md) {
    letter-spacing: -.2px;
  }
  letter-spacing: -.5px;
  margin-bottom: 20px;
}

h2 {
  @include typogram($h2);
  font-weight: bold;
  margin-bottom: 15px;
}

h3 {
  @include typogram($h3);
  font-weight: bold;
  margin-bottom: 5px;
}

h4 {
  @include typogram($h4);
  font-weight: normal;
  text-transform: uppercase;
  margin-bottom: 5px;
}

h5 {
  @include typogram($h5);
  font-weight: bold;
  margin-bottom: 5px;
}

h6 {
  @include typogram($h6);
  font-weight: bold;
  margin-bottom: 5px;
}

h1,h2,h3,h4,h5,h6 {
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  a{
    text-decoration: underline;
  }
}

figcaption {
  width: 100%;
  @include typogram($caption);
  font-weight: bold;
  letter-spacing: -0.14px;
  margin-top: 8px;

  .caption-credits {
    font-weight: 300;
    color: #9b9b9b;
  }
}

blockquote {
  @include typogram($quote);
  font-weight: bold;
  font-style: italic;
  padding-left: 15px;
  border-left: 1px solid #ccc;
  margin-bottom: 30px;
}

form {
  legend, p, label, input, select, option {
    @include typogram($credits);
  }
}

code {
  background: #eee;
  padding: 0 5px;
  border-radius: 5px;
  border: 1px solid #ddd;
  margin: 0 5px;
  font-size: 20px;
  text-transform: lowercase;
}

// Here you find the classes that you can append to standard HTML elements to get that specific VK look. Everything is in here, except for the specific subheading elements, which have their respective SASS within their components

// Top labels, as found on the VK Website
.top-label {
  width: 100%;
  margin-bottom: 4px;

  @include respond-from($screen-sm) {
    margin-bottom: 10px;
  }

  &-type {
    font-weight: bold;
  }
}

// Lead and title, as found on the VK Website
.lead {
  @include typogram($lead);
  letter-spacing: -.1px;
  font-weight: 300;
  margin: 22px 0 20px;
  @include respond-from($screen-sm) {
    margin: 24px 0 20px;
  }
}

.credits {
  @include typogram($credits);
  margin: 20px 0 30px;
  @include respond-from($screen-sm) {
    margin: 20px 0 50px;
  }

  time {
    margin-left: 2px;
    font-weight: 300
  }
}

.note {
  @include typogram($note)
}

.code-small {
  font-size: 1.5rem;
}